<!-- This will display errors related to Quote -->
<% if @quote.errors.any? %>
  <div class="alert alert-danger">
    <ul>
      <% @quote.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<!-- Initiate rendering of the form for @quote object. Get user_id from session as hidden field -->
<%= form_with(model: @quote, url: quotes_path, method: :post, local: true) do |f| %>
  <%= f.hidden_field :user_id, value: current_user.id %>

  <!-- Quote text form field with Bootstrap styling -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :quote_text, placeholder: 'Type quote here', class: 'form-control' %>
  </div>

  <!-- Quote publication year form field with Bootstrap styling -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_field :publication_year, placeholder: 'Year published', class: 'form-control' %>
  </div>

  <!-- Quote user comment form field with Bootstrap styling -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :comment, placeholder: 'Add any comments of your own here (optional)', class: 'form-control' %>
  </div>

  <!-- Quote isPublic checkbox with Bootstrap styling -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.label :isPublic do %>
      Public
      <%= f.check_box :isPublic, class: 'form-check-input' %>
    <% end %>
  </div>

  <!-- Select existing philosopher -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.collection_select :philosopher_id, Philosopher.all, :id, Proc.new{ |p| "#{p.fname} #{p.lname}" }, prompt: 'Who is the quote attributed to?', class: 'form-control' %>
  </div>

  <!-- Choose categories -->
  <div id="categories-container">
      <% @quote.quote_lists.each do |ql| %>

        <!-- Create a dropdown box that contains all categories. -->
        <%= f.fields_for :quote_lists do |quote_list| %>
          <div class="category-field row mb-2">
            <div class="col-auto">
              <%= quote_list.label :category_id, "Category", class: "form-label d-inline-block me-2" %>
              <%= quote_list.select :category_id, Category.all.collect { |cg| [cg.name, cg.id] }, { include_blank: true }, class: "form-control d-inline-block" %>
            </div>

            <!-- This is commented out because a Quote can only have one category. Possible implementation of more than one later
            <div class="col-auto align-self-end">
              <%= link_to '[-] Remove this category', '#', class: 'remove-category', style: "color: red; text-decoration: none;" %>
            </div>
            -->
            
          </div>
        <% end %>        
      <% end %>
  </div>

  <div class="mt-3">
    <%= f.submit 'Add Quote', class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>

<!--
<script>
// Wait for the document to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
  // Attach an event listener to detect clicks on the "Remove this category" link
  document.addEventListener('click', function(e) {
    if (e.target && e.target.classList.contains('remove-category')) {
      // Prevent the default action of the link
      e.preventDefault();

      // Get all the ingredient fields
      const categoryFields = document.querySelectorAll('.category-field');
      // Only remove an ingredient field if there's more than one
      if (categoryFields.length > 1) {
        e.target.closest('.category-field').remove();
      }
    }
  });
});
</script>
-->